// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Pet {
  id              String            @id @default(uuid())
  name            String
  category        Category          @relation(fields: [categoryId], references: [id])
  categoryId      String
  image           String
  size            Size
  age             PetAge
  Breed           Breed             @relation(fields: [breedId], references: [id])
  breedId         String
  description     String
  createdAt       DateTime          @default(now())
  User            User              @relation(fields: [userId], references: [id])
  userId          String            @unique
  adoptionRequest AdoptionRequest[]
  adoption        Adoption[]
}

model Breed {
  id        String   @id @default(uuid())
  name      String
  type      Type
  createdAt DateTime @default(now())
  Pet       Pet[]
}

model Category {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  Pet       Pet[]
}

model User {
  id                String            @id @default(uuid())
  email             String            @unique
  name              String
  pets              Pet[]
  sizePreferences   Size[]
  typePreferences   Type[]
  agePreferences    PetAge[]
  adoptionRequest   AdoptionRequest[]
  createdAt         DateTime          @default(now())
  previousAdoptions Adoption[]        @relation("PrevOwner")
  currentAdoptions  Adoption[]        @relation("NewOwner")
}

model Adoption {
  id          String    @id @default(uuid())
  status      Status
  message     String
  Pet         Pet       @relation(fields: [petId], references: [id])
  petId       String
  PrevOwner   User      @relation("PrevOwner", fields: [prevOwnerId], references: [id])
  prevOwnerId String
  NewOwner    User?     @relation("NewOwner", fields: [newOwnerId], references: [id])
  newOwnerId  String?
  adoptedAt   DateTime?
  createdAt   DateTime  @default(now())
}

model AdoptionRequest {
  id        String        @id @default(uuid())
  Pet       Pet           @relation(fields: [petId], references: [id])
  petId     String
  User      User          @relation(fields: [userId], references: [id])
  userId    String
  status    RequestStatus
  approved  Boolean?      @default(false)
  createdAt DateTime      @default(now())
}

enum Type {
  DOG
  CAT
  BIRD
  OTHER
}

enum Size {
  SMALL
  MEDIUM
  LARGE
}

enum Gender {
  MALE
  FEMALE
}

enum Status {
  AVAILABLE
  ADOPTED
  PENDING
}

enum RequestStatus {
  APPROVED
  PENDING
  REJECTED
}

enum PetAge {
  BABY
  YOUNG
  ADULT
  SENIOR
}
